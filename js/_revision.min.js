"use strict";dotclear.revisionExpander=()=>{$.expandContent({lines:$("#revisions-list tr.line"),callback:dotclear.viewRevisionContent})},dotclear.viewRevisionContent=(e,t="toggle")=>{if(null==$(e).attr("id"))return;const n=$(e).attr("id").substr(1),i=$("#id").val();let s=document.getElementById(`re${n}`);s?($(s).toggle(),$(e).toggleClass("expand")):dotclear.servicesGet("getPatch",(t=>{const i=(new DOMParser).parseFromString(t,"text/xml"),r=$(i).children("rsp")[0];if("ok"==r.attributes[0].value){s=document.createElement("tr"),s.id=`re${n}`;const t=document.createElement("td");t.colSpan=$(e).children("td").length,t.className="expand",s.appendChild(t);let i,o;if("xhtml"==$("#post_format").get(0).value?(i=$(r).find("post_excerpt_xhtml").children(),o=$(r).find("post_content_xhtml").children()):(i=$(r).find("post_excerpt").children(),o=$(r).find("post_content").children()),0==i.length&&0==o.length)$(t).append(`<strong>${dotclear.dcrevisions.msg.content_identical}</strong>`);else{let e='<table class="preview-rev">';e+=dotclear.viewRevisionRender(i,dotclear.dcrevisions.msg.excerpt,n),e+=dotclear.viewRevisionRender(o,dotclear.dcrevisions.msg.content,n),e+="</table>",$(t).append(e)}$(e).addClass("expand"),e.parentNode.insertBefore(s,e.nextSibling)}else $(e).toggleClass("expand"),window.alert($(r).find("message").text())}),{pid:i,rid:n,type:dotclear.dcrevisions.post_type})},dotclear.viewRevisionRender=(e,t)=>{let n="",i="";return e.each((function(t){const s=this.nodeName,r=$(this).text();let o=$(this).attr("oline")??"",l=$(this).attr("nline")??"";"skip"==s&&(o=l="&hellip;");let d=["skip","context","insert","delete"].includes(s)?` ${s}`:"";s==i||""!=i&&"context"!=i||(d+=" first");const c=e.length>t+1?e.get(t+1).nodeName:"";s!=c&&"insert"!=c&&"delete"!=c&&(d+=" last"),i=s,n+=`<tr>\n    <td class="minimal col-line">${o}</td>\n    <td class="minimal col-line">${l}</td>\n    <td class="${d}">${r}</td>\n    </tr>\n    `})),""!=n?`<thead>\n      <tr class="rev-header">\n       <th colspan="3">${t}</th>\n      </tr>\n      <tr class="rev-number">\n       <th class="minimal nowrap">${dotclear.dcrevisions.msg.current}</th>\n       <th class="minimal nowrap">${dotclear.dcrevisions.msg.revision}</th>\n       <th class="maximal"></th>\n      </tr>\n    </thead>\n    <tbody>\n    ${n}\n    </tbody>\n    `:""},$((()=>{$.fn.toggleWithDetailsRevisions=function(e){const t=this,n={unfolded_sections:dotclear.unfolded_sections,hide:!0,fn:!1,user_pref:!1,reverse_user_pref:!1},i=$.extend(n,e);i.user_pref&&void 0!==i.unfolded_sections&&i.user_pref in i.unfolded_sections&&(i.hide=i.reverse_user_pref);const s=()=>{!i.hide&&i.fn&&(i.fn.apply(t),i.fn=!1),i.hide=!i.hide};return this.each((()=>{$(t).on("toggle",(e=>(i.user_pref&&dotclear.jsonServicesPost("setSectionFold",(()=>{}),{section:i.user_pref,value:i.hide^i.reverse_user_pref?1:0}),s(),e.preventDefault(),!1))),s()}))},dotclear.dcrevisions=dotclear.getData("dcrevisions"),$("#edit-entry").on("onetabload",(()=>{$("#revisions-area").toggleWithDetailsRevisions({user_pref:"dcx_post_revisions",hide:0!==$("#revisions-list tbody").children().length,fn:dotclear.revisionExpander()}),$("#revisions-list tr.line a.patch").on("click",(()=>window.confirm(dotclear.dcrevisions.msg.confirm_apply_patch))),$("#revpurge").on("click",(()=>window.confirm(dotclear.dcrevisions.msg.confirm_purge_revision)))}))}));
